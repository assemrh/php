@model List<legarage.Models.VehiclesModel>

@{
    string state = "";
    foreach (var vehicle in Model)
    {
        state = (Convert.ToInt32(vehicle.IsNew) == 1) ? Resources.Part.New : Resources.Part.Used;


        <div class="card col-lg-6 index-card" id="garages_div" onclick="goToVehicleDetails('@vehicle.ID');">

            @{
                if (vehicle.Rate > 0)
                {
                    @Html.Partial("../Rating/Stars", vehicle.Rate, new ViewDataDictionary { { "class", "rating2" } })
                }
            }
            <img class="card-img-top" src="~/Images/vehicles/@vehicle.Image.URL" alt="Card image cap">


            <div class="card-body">
                <div class="row">
                    <div class="col col-lg">
                        <h4 class="card-title" style="display:inline">@vehicle.Title</h4>
                    </div>
                    <div class="col col-sm">

                    </div>
                    <div class="col-md align-self-end" style="text-align: end;"><em style="color:dimgray;"><i class="fa fa-phone text-success fa-1x fa-flip-horizontal" aria-hidden="true"></i></em> @vehicle.Mobile</div>


                </div>
                <hr />
                <div class="">
                    <div class="row details">
                        <div class="col-12 col-sm-12">
                            <ul class="list-group list-group-flush no-border">
                                <li class="list-group-item no-border"><em style="color:dimgray;">@Resources.Shared.CityName:</em> @vehicle.Address.Province</li>
                                <li class="list-group-item no-border"><em style="color:dimgray;">@Resources.Shared.CityArea:</em> @vehicle.Address.AddressName</li>
                                @*<li class="list-group-item no-border"><em style="color:dimgray;">Vehicle Sizes:</em> small, medium</li>*@
                            </ul>
                        </div>
                    </div>
     
                 </div>
            </div>
        </div>
    }
    <nav aria-label="Page navigation example" class="mt-auto">
        <ul class="pagination justify-content-center">
            @{
                string prev = "";
                string next = "";
                string next_page = "";
                string prev_page = "";
                int page = (int)Session["current_page"];
                int page_count = (int)Session["pages_count"];
                if (page == 1)
                {
                    prev = "disabled";
                }
                else
                {
                    prev = "";
                    prev_page = (page - 1).ToString();
                }
                if (page == page_count || page_count <= 1)
                {
                    next = "disabled";
                }
                else
                {
                    next = "";
                    next_page = (page + 1).ToString();
                }

            }
            <li class="page-item  @prev">
                <button class="page-link" tabindex="-1" aria-disabled="true" onclick="return getPage('@prev_page','/Vehicles/GetVehicles');">@Resources.Shared.Previous</button>
            </li>
            @{

                for (var pg = 1; pg <= page_count; pg++)
                {
                    <li class="page-item @(pg == page ? "active":"")">
                        <div onclick="return getPage('@pg','/Vehicles/GetVehicles');" class="page-link">
                            @(pg)
                        </div>
                    </li>
                }
            }

            <li class="page-item @next">
                <button class="page-link" onclick="return getPage('@next_page','/Vehicles/GetVehicles');">@Resources.Shared.Next</button>
            </li>
        </ul>
    </nav>

}
