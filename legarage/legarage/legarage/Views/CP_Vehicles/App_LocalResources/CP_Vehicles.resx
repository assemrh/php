<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add new vehicles</value>
  </data>
  <data name="Added" xml:space="preserve">
    <value>The vehicle has been added</value>
  </data>
  <data name="AddImage" xml:space="preserve">
    <value>Add new image</value>
  </data>
  <data name="AddImageP" xml:space="preserve">
    <value>Add the image  please</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>The address</value>
  </data>
  <data name="Automatic" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="ChoseCountryFirstly" xml:space="preserve">
    <value>Chose the country firstly</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>The city</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>The color</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>The country</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete the vehicle</value>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>The vehicle has been deleted</value>
  </data>
  <data name="DeleteImage" xml:space="preserve">
    <value>Delete the image</value>
  </data>
  <data name="Descrption" xml:space="preserve">
    <value>The descrption</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>The vehicle details</value>
  </data>
  <data name="Diesel" xml:space="preserve">
    <value>Diesel</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit the vehicle</value>
  </data>
  <data name="Edited" xml:space="preserve">
    <value>The vehicle has been edited</value>
  </data>
  <data name="EditImage" xml:space="preserve">
    <value>Enter image to change the current image</value>
  </data>
  <data name="EngineSize" xml:space="preserve">
    <value>The engine size</value>
  </data>
  <data name="EnterAddress" xml:space="preserve">
    <value>Enter the address</value>
  </data>
  <data name="EnterAddressP" xml:space="preserve">
    <value>Enter the address please</value>
  </data>
  <data name="EnterCityP" xml:space="preserve">
    <value>Enter the city please</value>
  </data>
  <data name="EnterColor" xml:space="preserve">
    <value>Enter the color</value>
  </data>
  <data name="EnterColorP" xml:space="preserve">
    <value>Enter the color please</value>
  </data>
  <data name="EnterDescrption" xml:space="preserve">
    <value>Enter the descrption</value>
  </data>
  <data name="EnterDescrptionP" xml:space="preserve">
    <value>Enter the descrption please</value>
  </data>
  <data name="EnterEngineSize" xml:space="preserve">
    <value>Enter the engine size</value>
  </data>
  <data name="EnterEngineSizeP" xml:space="preserve">
    <value>Enter the engineSize please</value>
  </data>
  <data name="EnterFuelType" xml:space="preserve">
    <value>Enter the fuel type</value>
  </data>
  <data name="EnterFuelTypeP" xml:space="preserve">
    <value>Enter the fuel type please</value>
  </data>
  <data name="EnterGearbox" xml:space="preserve">
    <value>Enter the gear box</value>
  </data>
  <data name="EnterGearBoxP" xml:space="preserve">
    <value>Enter the gear box please</value>
  </data>
  <data name="EnterKeywords" xml:space="preserve">
    <value>Enter the keywords</value>
  </data>
  <data name="EnterKeywordsP" xml:space="preserve">
    <value>Enter the keywords please</value>
  </data>
  <data name="EnterMieage" xml:space="preserve">
    <value>Enter the mieage</value>
  </data>
  <data name="EnterMieageP" xml:space="preserve">
    <value>Enter the mieage please</value>
  </data>
  <data name="EnterModelP" xml:space="preserve">
    <value>Enter the model please</value>
  </data>
  <data name="EnterOwnerName" xml:space="preserve">
    <value>Enter the owner name</value>
  </data>
  <data name="EnterOwnerNameP" xml:space="preserve">
    <value>Enter the ownerName please</value>
  </data>
  <data name="EnterPhoneP" xml:space="preserve">
    <value>Enter the phone please</value>
  </data>
  <data name="EnterPrice" xml:space="preserve">
    <value>Enter the price</value>
  </data>
  <data name="EnterPriceP" xml:space="preserve">
    <value>Enter the price please</value>
  </data>
  <data name="EnterQuantity" xml:space="preserve">
    <value>Enter the quantity</value>
  </data>
  <data name="EnterQuantityP" xml:space="preserve">
    <value>Enter the quantity please</value>
  </data>
  <data name="EnterTitle" xml:space="preserve">
    <value>Enter the title</value>
  </data>
  <data name="EnterTitleP" xml:space="preserve">
    <value>Enter the title please</value>
  </data>
  <data name="EnterUsername" xml:space="preserve">
    <value>Enter user name</value>
  </data>
  <data name="EnterUserP" xml:space="preserve">
    <value>Enter the user please</value>
  </data>
  <data name="EnterVehicleP" xml:space="preserve">
    <value>Enter the vehicle please</value>
  </data>
  <data name="EnterWhatsapp" xml:space="preserve">
    <value>Enter the Whatsapp number</value>
  </data>
  <data name="EnterYear" xml:space="preserve">
    <value>Enter the year</value>
  </data>
  <data name="EnterYearP" xml:space="preserve">
    <value>Enter the year please</value>
  </data>
  <data name="FuelType" xml:space="preserve">
    <value>The fuel type</value>
  </data>
  <data name="Gearbox" xml:space="preserve">
    <value>The gear box</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>The vehicle image</value>
  </data>
  <data name="Images" xml:space="preserve">
    <value>The vehicle image</value>
  </data>
  <data name="IsNew" xml:space="preserve">
    <value>Is new</value>
  </data>
  <data name="Keywords" xml:space="preserve">
    <value>The keywords</value>
  </data>
  <data name="Less100" xml:space="preserve">
    <value>Less100</value>
  </data>
  <data name="Less150" xml:space="preserve">
    <value>Less150</value>
  </data>
  <data name="Less50" xml:space="preserve">
    <value>Less50</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="Mieage" xml:space="preserve">
    <value>The mieage</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>The mobile</value>
  </data>
  <data name="Model" xml:space="preserve">
    <value>The model</value>
  </data>
  <data name="More150" xml:space="preserve">
    <value>More150</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoCity" xml:space="preserve">
    <value>There is no cities avalible</value>
  </data>
  <data name="NoCountry" xml:space="preserve">
    <value>There is no countries avalible</value>
  </data>
  <data name="NoImage" xml:space="preserve">
    <value>There is no images avalible</value>
  </data>
  <data name="NoModel" xml:space="preserve">
    <value>There is no models avalible</value>
  </data>
  <data name="NoUser" xml:space="preserve">
    <value>There is no users avalible</value>
  </data>
  <data name="NoVehicle" xml:space="preserve">
    <value>There is no vehicles avalible</value>
  </data>
  <data name="Old" xml:space="preserve">
    <value>Old</value>
  </data>
  <data name="OwnerName" xml:space="preserve">
    <value>The owner name</value>
  </data>
  <data name="Petrol" xml:space="preserve">
    <value>Petrol</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>The price</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>The quantity</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>The title</value>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>The tools</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>The user name</value>
  </data>
  <data name="Vehicles" xml:space="preserve">
    <value>The vehicles</value>
  </data>
  <data name="VehicleType" xml:space="preserve">
    <value>The vehicle type</value>
  </data>
  <data name="Whatsapp" xml:space="preserve">
    <value>The WhatsApp number</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>The year</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>